type: checkiO
files:
- name: mission.py
  visible: true
  text: "def tree_walker(tree, target):\n\n    # your code here\n    return 0\n\n\n\
    if __name__ == '__main__':\n    print(\"Example:\")\n    print(tree_walker([1,\
    \ \"2\", 3, [[3], 1, {1: \"one\"}]], 1))\n    \n    # These \"asserts\" are used\
    \ for self-checking and not for an auto-testing\n    assert tree_walker([1, \"\
    2\", 3, [[3], 1, {1: \"one\"}]], 1) == 2, \"1st\"\n    assert tree_walker({\"\
    one\": 1, \"two\": [{1: \"one\", 2: \"two\"}, 1, \"1\", \"one\"]}, 1) == 2, \"\
    2nd\"\n    assert tree_walker({\"one\": [1, 2], \"two\": [{1: \"one\", 2: \"two\"\
    }, [1, 2], \"1\", \"one\"]}, [1, 2]) == 2, \"3rd\"\n    assert tree_walker(5,\
    \ 5) == 1, \"4th\"\n    assert tree_walker([5, 6, 2, \"1\"], 1) == 0, \"5th\"\n\
    \    assert tree_walker([[dict()], [[[3], [3, 5]]], [], []], 3) == 2, \"6th\"\n\
    \    assert tree_walker([{1: \"one\"}, {2: \"two\"}, \"two\", [\"two\", {\"two\"\
    : \"one\"}]], \"two\") == 3, \"7th\"\n    print(\"Coding complete? Click 'Check'\
    \ to earn cool rewards!\")"
  learner_created: false
status: Unchecked
code: "def tree_walker(tree, target):\n\n    # your code here\n    return 0\n\n\n\
  if __name__ == '__main__':\n    print(\"Example:\")\n    print(tree_walker([1, \"\
  2\", 3, [[3], 1, {1: \"one\"}]], 1))\n    \n    # These \"asserts\" are used for\
  \ self-checking and not for an auto-testing\n    assert tree_walker([1, \"2\", 3,\
  \ [[3], 1, {1: \"one\"}]], 1) == 2, \"1st\"\n    assert tree_walker({\"one\": 1,\
  \ \"two\": [{1: \"one\", 2: \"two\"}, 1, \"1\", \"one\"]}, 1) == 2, \"2nd\"\n  \
  \  assert tree_walker({\"one\": [1, 2], \"two\": [{1: \"one\", 2: \"two\"}, [1,\
  \ 2], \"1\", \"one\"]}, [1, 2]) == 2, \"3rd\"\n    assert tree_walker(5, 5) == 1,\
  \ \"4th\"\n    assert tree_walker([5, 6, 2, \"1\"], 1) == 0, \"5th\"\n    assert\
  \ tree_walker([[dict()], [[[3], [3, 5]]], [], []], 3) == 2, \"6th\"\n    assert\
  \ tree_walker([{1: \"one\"}, {2: \"two\"}, \"two\", [\"two\", {\"two\": \"one\"\
  }]], \"two\") == 3, \"7th\"\n    print(\"Coding complete? Click 'Check' to earn\
  \ cool rewards!\")"
seconds_from_change: 9223372036854775807
